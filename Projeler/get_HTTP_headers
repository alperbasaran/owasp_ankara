# Requirements: pip3 install requests
# Usage: Place the URL list in the same directory as the script. URLs should be line by line.

import requests
from urllib.parse import urlparse

def check_website(url):
    try:
        # Check HTTP ve HTTPS protocols
        if not url.startswith('http://') and not url.startswith('https://'):
            url = 'http://' + url

        response = requests.get(url, verify=True)
        response.raise_for_status()

        # Get IP address
        ip_address = socket.gethostbyname(urlparse(url).hostname)
        report = f"\nURL: {url}\nIP address: {ip_address}\n"
        report += f"HTTP Headers:\n"
        report += f"Strict-transport-security: {response.headers.get('Strict-Transport-Security', 'None')}\n"
        report += f"Content-security-policy: {response.headers.get('Content-Security-Policy', 'None')}\n"
        report += f"X-content-type-options: {response.headers.get('X-Content-Type-Options', 'None')}\n"
        report += f"X-frame-options: {response.headers.get('X-Frame-Options', 'None')}\n"
        report += f"X-xss-protection: {response.headers.get('X-XSS-Protection', 'None')}\n"

        return report

    except requests.RequestException as e:
        error_message = f"\nError for URL '{url}': {e}\nThe specified URL is unreachable.\n"
        return error_message

if __name__ == "__main__":
    import socket

    # Get files
    file_name = "domains.txt"
    output_file_name = "report.txt"

    with open(file_name, "r") as file:
        domains = file.read().splitlines()

    with open(output_file_name, "w") as output_file:
        for domain in domains:
            report = check_website(domain)
            output_file.write(report)

    print(f"Reports have been successfully saved to the {output_file_name}.")
