import json
import getpass
from cryptography.fernet import Fernet

class PasswordManager:
    def __init__(self, data_file="passwords.json", key_file="key.key"):
        self.data_file = data_file
        self.key_file = key_file
        self.load_key()

        # If there is no encryption key, generate one
        if not self.key:
            self.key = Fernet.generate_key()
            self.save_key()

    def load_key(self):
        # Load the encryption key from the file
        try:
            with open(self.key_file, "rb") as file:
                self.key = file.read()
        except FileNotFoundError:
            self.key = None

    def save_key(self):
        # Save the encryption key to the file
        with open(self.key_file, "wb") as file:
            file.write(self.key)

    def encrypt_password(self, password):
        # Encrypt the password
        cipher = Fernet(self.key)
        encrypted_password = cipher.encrypt(password.encode())
        return encrypted_password

    def decrypt_password(self, encrypted_password):
        # Decrypt the encrypted password
        cipher = Fernet(self.key)
        decrypted_password = cipher.decrypt(encrypted_password).decode()
        return decrypted_password

    def save_password(self, service, username, password):
        # Save a new password
        try:
            with open(self.data_file, "r") as file:
                data = json.load(file)
        except FileNotFoundError:
            data = {}

        # Encrypt the username and password
        encrypted_password = self.encrypt_password(password)

        # Update the data and save it to the file
        data[service] = {"username": username, "password": encrypted_password}
        with open(self.data_file, "w") as file:
            json.dump(data, file)

        print(f"Password for {service} successfully saved.")

    def get_password(self, service):
        # Retrieve the saved password
        try:
            with open(self.data_file, "r") as file:
                data = json.load(file)
                if service in data:
                    username = data[service]["username"]
                    encrypted_password = data[service]["password"]
                    decrypted_password = self.decrypt_password(encrypted_password)
                    print(f"Username: {username}\nPassword: {decrypted_password}")
                else:
                    print(f"No saved password found for {service}.")
        except FileNotFoundError:
            print("Password database not found.")

if __name__ == "__main__":
    password_manager = PasswordManager()

    print("1. Save Password")
    print("2. Retrieve Password")
    choice = input("Please enter an option (1/2): ")

    if choice == "1":
        service = input("Enter the service name: ")
        username = input("Enter your username: ")
        password = getpass.getpass("Enter your password: ")  # Using getpass to hide the password
        password_manager.save_password(service, username, password)
    elif choice == "2":
        service = input("Enter the service name: ")
        password_manager.get_password(service)
    else:
        print("Invalid option. Please enter 1 or 2.")
